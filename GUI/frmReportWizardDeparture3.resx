<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoReport.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhyACEAIcAAIa61pOVmMbj66nV4duxd/qlK5e72KrL4lOrxPu9XfywMv3kvNa1iCmWtR2Rsa3H
        1//58ePawzWcuUumwWirzEGhvfy4S4nF1uzKmDGauPu2Sai7yPqtNXG2zi2YtjidutDQ0rrU2iCSsmuz
        zM+7oLLT5fzDa5rO3PuuOfPduvusLuG7hmKyyfuuMJi0wvOqQ/W8ZfyvMD6gvFmsxsW0myaVtOjOpkKd
        u7fEw+vZvMfAtsfW0v705EWkvxuQsPuyQOa5eny7066wsvuxPcLd6vupL5PE2/qqMfPNk/u2Rr3Z6Y60
        y4LA1NTq8Huy0ozH1+Lx9ezFjebx94/C2fbFdte8mfqoLLfb5j6evbHP18vk7dnr8lCpw5LJ2fuwOk6o
        wvusMOqsVeTp6uOybC6Wt9Ha2u7VqPuqLfqoLlKlxOHu9fqjKrjT58XOzPnJfc3XyPu0Qna50Py0Pfqm
        K/S0VDObufaoN/Tbr/qyRq22vV2wx97VwPqrNvuuM6DF3/2+V/y6VvjFcDCZt/y0RtvNs7W+wkSjvvPG
        gaq2r+uoTfWkNfrAYtnWy/bUm/LQlvusMom/1fu0Ptvi2tvdzvq8VySUs/D3+bW5sl+ux/jTl/rCZvuy
        QuKsZMbg7PfWozCXuOTk5cnKy/3DZP7ry/Hy8uvr7PzTk/7u1v7pyf3ervH4+vj4+aepq/zIePu4UP3X
        lxuPsPzOhtbX2P3YoLy9v6ChpN3e37W2uP7w2P7hsfqnK/3Nfn+/0/3Si/3IccLExf7cpNPn8Dufu0il
        wG+5ziWTtPqoMNvYwPjNiMnLwPjHe+Tiz+3l1Ovo4LK1sODm6bW8v7u6tPGuTfnUl/Tly5/Q3i+auO+1
        XKS+4bve6Py4T0ifwHiw0aSyuc7Z79zXwFiqxvjJekOjvtXd1/C1XfDHivbKg/bLiOLi4Obk4Pe4VPS4
        X9rm89PAp67X4zmcu8nQ0D+cvTyfvKnQ4tDh48zOzKXA1HSz0Eelv/rZo/jZpsXa4PerOPqnJxqPsP//
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAAyACEAAAI/wD/CRxIsKDBgwgTKlzIsKHDhxAj
        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
        ADs=
</value>
  </data>
</root>